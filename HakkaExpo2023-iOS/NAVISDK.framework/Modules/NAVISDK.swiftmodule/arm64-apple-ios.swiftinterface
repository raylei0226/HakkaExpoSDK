// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name NAVISDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import ClusterKit
import CommonCrypto
import CoreBluetooth
import CoreLocation
import Foundation
import GoogleMaps
import IndoorAtlas
import MapKit
@_exported import NAVISDK
import SafariServices
import Swift
import UIKit
import UserNotifications
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc public class NaviProject : ObjectiveC.NSObject {
  @objc public static func startService(_ projectId: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class MapVC : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func prepare(for segue: UIKit.UIStoryboardSegue, sender: Any?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NAVISDK.MapVC : UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}
extension NAVISDK.MapVC : GoogleMaps.GMSMapViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func mapView(_ mapView: GoogleMaps.GMSMapView, didTap marker: GoogleMaps.GMSMarker) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc dynamic public func mapView(_ mapView: GoogleMaps.GMSMapView, didTapAt coordinate: CoreLocation.CLLocationCoordinate2D)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func mapView(_ mapView: GoogleMaps.GMSMapView, didChange position: GoogleMaps.GMSCameraPosition)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func mapView(_ mapView: GoogleMaps.GMSMapView, idleAt position: GoogleMaps.GMSCameraPosition)
}
public enum NAVISDKAPITypes {
  case Pro
  case Test
  case Merge_Test
  public static func == (a: NAVISDK.NAVISDKAPITypes, b: NAVISDK.NAVISDKAPITypes) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public var NAVISDKAPIType: NAVISDK.NAVISDKAPITypes
@_hasMissingDesignatedInitializers public class OGPointProvider {
  @objc deinit
}
extension GoogleMaps.GMSMapView : ClusterKit.CKMap {
  @_Concurrency.MainActor(unsafe) @objc dynamic public var clusterManager: ClusterKit.CKClusterManager {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc dynamic public var visibleMapRect: MapKit.MKMapRect {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc dynamic public var zoom: Swift.Double {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc dynamic public func add(_ clusters: [ClusterKit.CKCluster])
  @_Concurrency.MainActor(unsafe) @objc dynamic public func remove(_ clusters: [ClusterKit.CKCluster])
  @_Concurrency.MainActor(unsafe) @objc dynamic public func perform(_ animations: [ClusterKit.CKClusterAnimation], completion: ((Swift.Bool) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func select(_ cluster: ClusterKit.CKCluster, animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func deselect(_ cluster: ClusterKit.CKCluster, animated: Swift.Bool)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class Home : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func prepare(for segue: UIKit.UIStoryboardSegue, sender: Any?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NAVISDK.Home : UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textFieldShouldReturn(_ textField: UIKit.UITextField) -> Swift.Bool
}
extension NAVISDK.Home : UIKit.UICollectionViewDelegate, UIKit.UICollectionViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
}
public typealias OGFloorInfo = (number: Swift.Int, id: Swift.Int, name: Swift.String)
@_hasMissingDesignatedInitializers public class OGFloorProvider {
  public func getAll() -> [NAVISDK.OGFloorModel]
  public func get(at id: Swift.Int) -> NAVISDK.OGFloorModel?
  public func getAllNumber() -> [Swift.Int]
  public func getAllFloorInfo() -> [NAVISDK.OGFloorInfo]
  @objc deinit
}
public struct OGFloorModel {
  public let id: Swift.Int
  public let number: Swift.Int
  public let name: Swift.String
  public let desc: Swift.String
  public let order: Swift.String
  public let coordinate: CoreLocation.CLLocationCoordinate2D
  public let bl_coordinate: CoreLocation.CLLocationCoordinate2D
  public let tr_coordinate: CoreLocation.CLLocationCoordinate2D
  public let plan_id: Swift.String
  public let is_map: Swift.Bool
}
@_hasMissingDesignatedInitializers public class OGPointModel {
  @objc deinit
}
public struct OGCategoryModel {
  public init(_ dic: [Swift.String : Any])
}
extension UIKit.UIColor {
  convenience public init?(hex: Swift.String)
  open class func rgb(red: CoreFoundation.CGFloat, green: CoreFoundation.CGFloat, blue: CoreFoundation.CGFloat) -> UIKit.UIColor
}
extension UIKit.UIImage {
  public class func textImage(_ text: Swift.String, in image: UIKit.UIImage) -> UIKit.UIImage
  open class func textWithImage(drawText: Swift.String, inImage: UIKit.UIImage) -> UIKit.UIImage
}
extension Swift.String {
  public var md5: Swift.String? {
    get
  }
  public var sha1: Swift.String? {
    get
  }
  public var localized: Swift.String {
    get
  }
}
extension UIKit.UIImage {
  public var cgImageOrientation: ImageIO.CGImagePropertyOrientation {
    get
  }
  public var heic: Foundation.Data? {
    get
  }
  public func heic(compressionQuality: CoreFoundation.CGFloat = 1) -> Foundation.Data?
}
@objc @_inheritsConvenienceInitializers public class NAVIFlow : ObjectiveC.NSObject {
  public func start(target vc: UIKit.UIViewController, id: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class OGGlobalData {
  public static var finishDownload: Swift.Bool
  public static let shared: NAVISDK.OGGlobalData
  public static let floorProvider: NAVISDK.OGFloorProvider
  public static let pointProvider: NAVISDK.OGPointProvider
  public func setFloorPointData(_ data: [[Swift.String : Any]], completionHandler: (() -> ())?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class NaviMainVC : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func prepare(for segue: UIKit.UIStoryboardSegue, sender: Any?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NAVISDK.NAVISDKAPITypes : Swift.Equatable {}
extension NAVISDK.NAVISDKAPITypes : Swift.Hashable {}
